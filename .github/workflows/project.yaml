name: Create Project with Columns

on:
  workflow_dispatch:

permissions:
  contents: read
  issues: write
  projects: write

jobs:
  create-project:
    runs-on: ubuntu-latest
    steps:
      - name: Create Project
        id: project
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          REPO_NAME="${{ github.event.repository.name }}"
          REPO_OWNER="${{ github.repository_owner }}"
          PROJECT_NAME="$REPO_NAME Project"

          # Get repository ID
          REPO_ID=$(gh api graphql -f query='
            query($owner:String!, $name:String!) {
              repository(owner:$owner, name:$name) { id }
            }' \
            -F owner="$REPO_OWNER" -F name="$REPO_NAME" | jq -r '.data.repository.id')

          echo "Repository ID: $REPO_ID"

          # Create new project
          PROJECT_ID=$(gh api graphql -f query='
            mutation($input: CreateProjectNextInput!) {
              createProjectNext(input: $input) {
                projectNext { id title }
              }
            }' \
            -F input="{\"repositoryId\":\"$REPO_ID\",\"name\":\"$PROJECT_NAME\",\"description\":\"Automatically created project\",\"public\":false}" \
            | jq -r '.data.createProjectNext.projectNext.id')

          echo "Created project $PROJECT_NAME with ID $PROJECT_ID"
          echo "project_id=$PROJECT_ID" >> $GITHUB_OUTPUT

      - name: Add Columns to Project
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PROJECT_ID: ${{ steps.project.outputs.project_id }}
        run: |
          for COLUMN in "To Do" "In Progress" "Review" "Done"; do
            gh api graphql -f query='
              mutation($input: AddProjectNextFieldInput!) {
                addProjectNextField(input:$input) {
                  projectNextField { id name }
                }
              }' \
              -F input="{\"projectId\":\"$PROJECT_ID\",\"name\":\"$COLUMN\",\"settings\":\"{}\"}" \
              | jq -r '.data.addProjectNextField.projectNextField.name'
            echo "Created column $COLUMN"
          done
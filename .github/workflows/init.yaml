name: Initialize project tracking

on:
  - fork
  - workflow_dispatch

permissions:
  issues:   write
  contents: read


env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # Fall 2025 deadlines for milestones (23:59 Toronto --> 03:59 UTC)
  M1_DUE:    "2025-10-13T03:59:59.0Z"
  M2_DUE:    "2025-11-10T03:59:59.0Z"
  FINAL_DUE: "2025-12-05T03:59:59.0Z"
  
jobs:

  init-milestones:
    runs-on: ubuntu-latest
    steps:
      - name: Create Milestone 1
        run: |
          gh api \
            repos/${{ github.repository }}/milestones \
            -f title="Milestone 1" \
            -f state="open" \
            -f description="First Window of Opportunity for feedback" \
            -f due_on="${{ env.M1_DUE }}"

      - name: Create Milestone 2
        run: |
          gh api \
            repos/${{ github.repository }}/milestones \
            -f title="Milestone 2" \
            -f state="open" \
            -f description="Second Window of Opportunity for feedback" \
            -f due_on="${{ env.M2_DUE }}"

      - name: Create Milestone 3
        run: |
          gh api \
            repos/${{ github.repository }}/milestones \
            -f title="Final Delivery" \
            -f state="open" \
            -f description="Delivery of the complete document" \
            -f due_on="${{ env.FINAL_DUE }}"

  get-milestones:
    runs-on: ubuntu-latest
    needs: init-milestones
    outputs:
      milestone1: ${{ steps.lookup.outputs.m1 }}
      milestone2: ${{ steps.lookup.outputs.m2 }}
      milestone3: ${{ steps.lookup.outputs.m3 }}
    steps:
      - name: Lookup milestone IDs
        id: lookup
        run: |
          M1=$(gh api repos/${{ github.repository }}/milestones --jq '.[] | select(.title=="Milestone 1") | .number')
          M2=$(gh api repos/${{ github.repository }}/milestones --jq '.[] | select(.title=="Milestone 2") | .number')
          M3=$(gh api repos/${{ github.repository }}/milestones --jq '.[] | select(.title=="Final Delivery") | .number')

          echo "m1=$M1" >> $GITHUB_OUTPUT
          echo "m2=$M2" >> $GITHUB_OUTPUT
          echo "m3=$M3" >> $GITHUB_OUTPUT


  init-goal-book:
    runs-on: ubuntu-latest
    needs: get-milestones
    env:
      MILESTONE_1: ${{ needs.get-milestones.outputs.milestone1 }}
      MILESTONE_2: ${{ needs.get-milestones.outputs.milestone2 }}
      MILESTONE_3: ${{ needs.get-milestones.outputs.milestone3 }}
    steps:
      - name: Create G1
        run: |
          # Create the issue and capture its number
          ISSUE_NUMBER=$(gh api repos/${{ github.repository }}/issues \
            -f title="G.1 - Context and Overall objectives" \
            -f body="High-level view of the project: organizational context and reason for building a system. It explains why the project is needed, recalls the business context, and presents the general business objectives" \
            -f milestone="$MILESTONE_1" \
            --jq '.number')

          echo "Created issue #$ISSUE_NUMBER"

          # Add the 'goal' label
          gh api repos/${{ github.repository }}/issues/$ISSUE_NUMBER/labels \
            -f labels='["goal"]'